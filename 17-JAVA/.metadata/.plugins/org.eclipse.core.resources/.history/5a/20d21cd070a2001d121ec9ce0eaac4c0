package ar.com.collectionsprac;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

import ar.com.collectionsprac.model.Alumno;
import ar.com.collectionsprac.model.Cursada;

public class ejemplo10 {
	public static void main(String[] args) {
		
		//Probamos Iterator
		//Es la forma en la que vamos a leer una lista
		
		Cursada curso1 = new Cursada("Geometria", 30);
		
		Alumno alumno1 = new Alumno("Agustin Perea", "001");
		Alumno alumno2 = new Alumno("Joel Miller", "002");
		Alumno alumno3 = new Alumno("Leon Kennedy", "003");
		Alumno alumno4 = new Alumno("Lara Croft", "004");
		Alumno alumno5 = new Alumno("Rick Sanchez", "005");
		Alumno alumno6 = new Alumno("Peter Parker", "006");
		Alumno alumno7 = new Alumno("Eric Cartman", "007");
		Alumno alumno8 = new Alumno("John Marston", "008");
		
		
		//Gracias al addAlumno creado en Cursada.java, podemos agregar un alumno al curso seleccionado	
		curso1.addAlumno(alumno1);
		curso1.addAlumno(alumno2);
		curso1.addAlumno(alumno3);
		curso1.addAlumno(alumno4);
		curso1.addAlumno(alumno5);
		curso1.addAlumno(alumno6);
		curso1.addAlumno(alumno7);
		curso1.addAlumno(alumno8);

		
		//curso1.getAlumno().forEach(alumno -> System.out.println(alumno));
		
		//Clase creada especificamente para iterar algo
		Iterator<Alumno> alumnoIterator = curso1.getAlumno().iterator();//A elementos Alumno que tomamos de curso1.getAlumno() los iteramos y lo guardamos dentro de iterarAlumno del tipo Iterator. El metodo iterator() devuelve un Iterator.
		//Para que el Iterator vaya elemento por elemento
		while(alumnoIterator.hasNext()) {//Mientras que los elementos dentro de alumnoIterator tenga un elemento siguiente, se ejecuta el codigo
			System.out.println(alumnoIterator.next());//Que nos muestre el elemento siguiente. Ya que next() sirve para recorrer los valores del Iterator
		}
		//En este punto, estamos posicionados en el ultimo elemento de la lista
		//Entonces si hacemos lo siguiente dar√° error. Porque queremos ir al siguiente alumno que no existe.
		//alumnoIterator.next();
	}
	
}
