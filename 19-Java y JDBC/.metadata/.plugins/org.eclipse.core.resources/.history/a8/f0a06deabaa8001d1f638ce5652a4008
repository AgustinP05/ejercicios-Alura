package com.alura.jdbc.controller;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.alura.jdbc.factory.ConnectionFactory;

import java.sql.Statement;

public class ProductoController {

	public int modificar(String nombre, String descripcion, Integer cantidad, Integer id) throws SQLException {
		Connection con = new ConnectionFactory().recuperarConexion();
		/*Con createStatement (Funciona, pero recordar sacar el click del campo modificado)
		Statement statement = con.createStatement();
		statement.execute("UPDATE PRODUCTO SET "
		+"NOMBRE = '"+nombre+"'"
		+", DESCRIPCION = '"+descripcion+"'"
		+", CANTIDAD = "+cantidad
		+" WHERE ID= "+id);
		*/
		//Con prepareStatement
		PreparedStatement statement = con.prepareStatement("UPDATE PRODUCTO SET "
				+ "NOMBRE = ? ,"
				+ "DESCRIPCION = ? ,"
				+ "CANTIDAD = ? "
				+ " WHERE ID= ?");
		
		statement.setString(1, nombre);
		statement.setString(2, descripcion);
		statement.setInt(3, cantidad);
		statement.setInt(4, id);
		statement.execute();
		
		int updateCount = statement.getUpdateCount();
		con.close();
		return updateCount;
	}

	public void eliminar(Integer id) throws SQLException {
		Connection con = new ConnectionFactory().recuperarConexion();
		/* Con createStatement
		Statement statement = con.createStatement();
		
		statement.execute("DELETE FROM PRODUCTO WHERE ID = "+id);
		*/
		//Con prepareStatement
		PreparedStatement statement= con.prepareStatement("DELETE FROM PRODUCTO WHERE ID = ?");
		statement.setInt(1, id);
		statement.execute();
		con.close();
	}

	public List<Map<String,String>> listar() throws SQLException {
		/*Con createStatement
		//Connection con = DriverManager.getConnection("jdbc:mysql://localhost/control_de_stock?useTimeZone=true&serverTimeZone=UTC","root","=)(Laorden66");
		//Lo paso a ConnectionFactory
		Connection con = new ConnectionFactory().recuperarConexion();//Crear conexion, lo mismo de arriba
		
		Statement statement = con.createStatement();
		
		statement.execute("SELECT ID,NOMBRE,DESCRIPCION,CANTIDAD FROM producto");//Boolean
		*/
		
		Connection con = new ConnectionFactory().recuperarConexion();//Crear conexion
		
		//Con prepareStatement
		PreparedStatement statement = con.prepareStatement("SELECT ID,NOMBRE,DESCRIPCION,CANTIDAD FROM producto");
		statement.execute();
		//////////////////////
		
		ResultSet resultSet= statement.getResultSet();
		
		List<Map<String,String>>resultado=new ArrayList<>();//Para guardar adentro los datos de cada fila
		
		while(resultSet.next()) { //Por cada vuelta tomamos una fila entera
			//	key		value
			Map<String, String> fila = new HashMap<>();
			fila.put("ID",String.valueOf(resultSet.getInt("ID")));
			fila.put("NOMBRE", resultSet.getString("NOMBRE"));
			fila.put("DESCRIPCION", resultSet.getString("DESCRIPCION"));
			fila.put("CANTIDAD",String.valueOf(resultSet.getInt("CANTIDAD")));
			
			resultado.add(fila);//Agregamos la fila al Map resultado
		}
		
		con.close();
		
		return resultado;//Retornar el resultado del Map
		
	}

    public void guardar(Map<String,String> producto) throws SQLException {
		Connection con = new ConnectionFactory().recuperarConexion();
		String nombre= producto.get("NOMBRE");
		String descripcion=producto.get("DESCRIPCION");
		Integer cantidad =Integer.valueOf(producto.get("CANTIDAD"));
		Integer maximoCantidad = 50;
		/*Con createStatement
		Statement statement = con.createStatement();
		
		statement.execute("INSERT INTO PRODUCTO(nombre, descripcion, cantidad) "
				+" VALUES('"+ producto.get("NOMBRE")+"','"
				+producto.get("DESCRIPCION")+"',"
				+producto.get("CANTIDAD")+")",Statement.RETURN_GENERATED_KEYS);
		*/
		
		//Con prepareStatement
		PreparedStatement statement = con.prepareStatement("INSERT INTO PRODUCTO "
				+"(nombre, descripcion, cantidad) "
				+" VALUES(?,?,?)",Statement.RETURN_GENERATED_KEYS);
		do {
			int cantidadParaGuardar = Math.min(cantidad, maximoCantidad);//Para tomar el numero minimo entre los dos
			ejecutarRegistro(nombre, descripcion, cantidadParaGuardar, statement);//Se crea el registro 
			
			cantidad -= maximoCantidad; //Le restamos para que quede lo que sobre 
		}while(cantidad > 0);//Mientras cantidad sea mayor a 0, repita el codigo del bloque
			con.close();
    }

    
	private void ejecutarRegistro(String nombre, String descripcion, Integer cantidad, PreparedStatement statement)
			throws SQLException {
		//Setear a los ? en orden
		statement.setString(1, nombre);
		statement.setString(2, descripcion);
		statement.setInt(3, cantidad);

		statement.execute();

		//queremos tomar el valor autogenerado (ID) de cada producto
		ResultSet resultSet =statement.getGeneratedKeys();//Listado de ID's    	
		//Los iteramos
		while(resultSet.next()) {
				System.out.println("Fue insertado el producto de ID: "+resultSet.getInt(1));		
		}
	}
}
